console.log("Leet2Git main world script loaded");const r=window.fetch;window.fetch=function(o,t){let l;if(typeof o=="string"?l=o:o instanceof URL?l=o.href:l=o.url,l&&l.includes("graphql")){let n=!1;if(t&&t.body)try{const s=typeof t.body=="string"?t.body:t.body.toString();n=JSON.parse(s).operationName==="questionDetail"}catch{}if(n)return console.log("[Leet2Git] questionDetail GraphQL request intercepted"),r(o,t).then(async s=>{var c,a;if(s.ok){const g=s.clone();try{const i=await g.json();console.log("[Leet2Git] questionDetail response:",i);const e=(c=i==null?void 0:i.data)==null?void 0:c.question;e&&e.topicTags?(console.log("[Leet2Git] TopicTags found!",e.topicTags),console.log("[Leet2Git] First topic tag:",(a=e.topicTags[0])==null?void 0:a.name),chrome.runtime.sendMessage({type:"graphql_question_data",data:{slug:e.titleSlug,title:e.title,difficulty:e.difficulty,categoryTitle:e.categoryTitle,topicTags:e.topicTags}},d=>{console.log("[Leet2Git] Sent to background script, response:",d)})):console.log("[Leet2Git] No question or topicTags in response")}catch(i){console.log("[Leet2Git] Parse error:",i)}}return s})}return r(o,t)};console.log("[Leet2Git] Main world fetch override installed");
